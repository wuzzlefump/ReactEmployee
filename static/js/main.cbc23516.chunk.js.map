{"version":3,"sources":["components/head.js","components/employee.js","components/input.js","components/search.js","App.js","reportWebVitals.js","index.js"],"names":["Head","props","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Employee","num","first","last","email","phone","alt","src","image","Inputter","value","filter","onChange","name","list","type","className","placeholder","id","SearchBox","useState","People","listState","setList","setFilter","setError","useEffect","Jumbotron","event","target","console","log","results","Button","onClick","e","preventDefault","arr","forEach","item","toLowerCase","includes","push","Table","striped","bordered","hover","container","answer","sort","thing","map","picture","thumbnail","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAaeA,MATd,SAAcC,GACJ,OAAO,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,UACd,cAACJ,EAAA,EAAOK,MAAR,6BACA,cAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,8B,+BCQlBC,MAbf,SAAmBT,GAEf,OACI,+BACA,6BAAKA,EAAMU,MACX,6BAAKV,EAAMW,QACX,6BAAKX,EAAMY,OACX,6BAAKZ,EAAMa,QACX,6BAAKb,EAAMc,QACX,6BAAI,qBAAKC,IAAKf,EAAMW,MAAOK,IAAKhB,EAAMiB,c,QCQ/BC,MAhBf,SAAkBlB,GAChB,OACM,uBACEmB,MAAOnB,EAAMoB,OACbC,SAAUrB,EAAMqB,SAChBC,KAAK,OACLC,KAAK,OACLC,KAAK,OACLC,UAAU,eACVC,YAAY,SACZC,GAAG,UCmGEC,MAtGf,WAAqB,IAAD,EACMC,mBAASC,GADf,mBACbC,EADa,KACHC,EADG,OAEKH,mBAAS,IAFd,mBAEbT,EAFa,KAENa,EAFM,OAGKJ,mBAAS,IAHd,mBAGNK,GAHM,WAsEhB,OA/DJC,qBAAU,WACFH,EAAQF,GACRG,EAAU,IACVC,EAAS,MACZ,IA2DM,gCAAK,eAACE,EAAA,EAAD,WACR,oDACA,sDAGA,8BACA,cAAC,EAAD,CACEf,SAhEkB,SAAAgB,GACxBJ,EAAUI,EAAMC,OAAOnB,OACvBoB,QAAQC,IAAIpB,IA+DNqB,QAASrB,IACX,cAACsB,EAAA,EAAD,CAAQrC,QAAQ,UAAUsC,QA7DlB,SAACC,GACjBA,EAAEC,iBAEF,IAAIC,EAAK,CAACL,QAAQ,IAClBX,EAAOW,QAAQM,SAAQ,SAAAC,IAChBA,EAAK1B,KAAKX,MAAMsC,cAAcC,SAAS9B,EAAO6B,gBAAgBD,EAAK1B,KAAKV,KAAKqC,cAAcC,SAAS9B,EAAO6B,iBAC1GH,EAAIL,QAAQU,KAAKH,MAGxBhB,EAAQc,IAoDD,0BAGF,eAACM,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAClD,QAAQ,OAAtC,UACJ,gCACE,+BACE,mCACA,oBAAIsC,QAxDS,WACfJ,QAAQC,IAAIT,GACZ,IAAIyB,EAAY,GACZC,EAAS,CAAChB,QAAQ,IACtBV,EAAUU,QAAQM,SAAQ,SAAAC,GACtBQ,EAAUL,KAAKH,EAAK1B,KAAKX,UAEjB6C,EAAUE,OAEhBX,SAAQ,SAAAC,GACVjB,EAAUU,QAAQM,SAAQ,SAAAY,GACnBX,IAASW,EAAMrC,KAAKX,OACnB8C,EAAOhB,QAAQU,KAAKQ,MAG5B3B,EAAQyB,OAyCV,wBACA,oBAAId,QArCQ,WAEd,IAAIa,EAAY,GACZC,EAAS,CAAChB,QAAQ,IACtBV,EAAUU,QAAQM,SAAQ,SAAAC,GACtBQ,EAAUL,KAAKH,EAAK1B,KAAKV,SAEjB4C,EAAUE,OAEhBX,SAAQ,SAAAC,GACVjB,EAAUU,QAAQM,SAAQ,SAAAY,GACnBX,IAASW,EAAMrC,KAAKV,MACnB6C,EAAOhB,QAAQU,KAAKQ,MAG5B3B,EAAQyB,OAsBV,uBACA,uCACA,uCACA,8CAGJ,gCACK1B,EAAUU,QAAQmB,KAAI,SAAAZ,GAAI,OACjC,cAAC,EAAD,CAAUrC,MAAOqC,EAAK1B,KAAKX,MAAOC,KAAMoC,EAAK1B,KAAKV,KAAMK,MAAO+B,EAAKa,QAAQC,UAAWjD,MAAQmC,EAAKnC,MAAOC,MAASkC,EAAKlC,MAAOJ,IAAKoB,EAAOW,QAAQsB,QAAQf,GAAM,gBC3FnJgB,MATf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cbc23516.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from 'react-bootstrap/esm/Navbar';\r\n\r\n\r\n function Head(props) {\r\n           return(<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand >React Employee</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  </Navbar>)\r\n\r\n \r\n}\r\n\r\nexport default Head","import React from 'react'\r\n\r\nfunction Employee (props){\r\n\r\n    return( \r\n        <tr>\r\n        <td>{props.num}</td>\r\n        <td>{props.first}</td>\r\n        <td>{props.last}</td>\r\n        <td>{props.email}</td>\r\n        <td>{props.phone}</td>\r\n        <td><img alt={props.first} src={props.image}></img></td>\r\n       </tr> \r\n        )\r\n}\r\nexport default Employee","import React from \"react\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction Inputter(props) {\r\n  return (\r\n        <input\r\n          value={props.filter}\r\n          onChange={props.onChange}\r\n          name=\"term\"\r\n          list=\"term\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"search\"\r\n          id=\"term\"\r\n        />\r\n\r\n  );\r\n}\r\n\r\nexport default Inputter;","import React, {useState, useEffect} from 'react'\r\nimport Jumbotron from 'react-bootstrap/esm/Jumbotron'\r\nimport Table from 'react-bootstrap/esm/Table'\r\nimport People from '../people.json'\r\n\r\nimport Employee from './employee'\r\nimport Button from 'react-bootstrap/esm/Button'\r\nimport Inputter from './input'\r\n\r\n\r\nfunction SearchBox(){\r\nconst [listState,setList]=useState(People)\r\nconst [filter,setFilter]=useState(\"\")\r\nconst [error, setError]= useState(\"\")\r\n\r\n\r\n\r\nuseEffect(() => {\r\n        setList(People)\r\n        setFilter(\"\")\r\n        setError(\"\")\r\n  }, []);\r\n\r\n  const handleInputChange = event => {\r\n    setFilter(event.target.value);\r\n    console.log(filter)\r\n  };\r\n\r\nconst results = (e) =>{\r\ne.preventDefault()\r\n\r\nlet arr ={results:[]}\r\nPeople.results.forEach(item=>{\r\n    if(item.name.first.toLowerCase().includes(filter.toLowerCase())||item.name.last.toLowerCase().includes(filter.toLowerCase())){\r\n        arr.results.push(item)\r\n    }\r\n})\r\n setList(arr)\r\n}\r\n\r\nconst alphaFirst = ()=>{\r\n    console.log(listState)\r\n    let container = []\r\n    let answer = {results:[]}\r\n    listState.results.forEach(item=>{\r\n        container.push(item.name.first)\r\n    })\r\n    let alpha = container.sort()\r\n\r\n    alpha.forEach(item=>{\r\n        listState.results.forEach(thing=>{\r\n            if(item === thing.name.first){\r\n                answer.results.push(thing)\r\n            }\r\n        })\r\n        setList(answer)\r\n    })\r\n\r\n}\r\n\r\nconst alphaLast = ()=>{\r\n\r\n    let container = []\r\n    let answer = {results:[]}\r\n    listState.results.forEach(item=>{\r\n        container.push(item.name.last)\r\n    })\r\n    let alpha = container.sort()\r\n\r\n    alpha.forEach(item=>{\r\n        listState.results.forEach(thing=>{\r\n            if(item === thing.name.last){\r\n                answer.results.push(thing)\r\n            }\r\n        })\r\n        setList(answer)\r\n    })\r\n\r\n}\r\n\r\n    return(<div><Jumbotron>\r\n        <h1>Employee Directory</h1>\r\n        <p>\r\n          Search Employees here\r\n        </p>\r\n        <p>\r\n        <Inputter\r\n          onChange={handleInputChange}\r\n          results={filter} />\r\n        <Button variant=\"success\" onClick={results}>Submit</Button>\r\n        </p>\r\n      </Jumbotron>\r\n      <Table striped bordered hover variant=\"dark\">\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th onClick={alphaFirst}>First Name</th>\r\n      <th onClick={alphaLast}>Last Name</th>\r\n      <th>Email</th>\r\n      <th>Phone</th>\r\n      <th>Picture</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {listState.results.map(item=>(\r\n<Employee first={item.name.first} last={item.name.last} image={item.picture.thumbnail} email ={item.email} phone = {item.phone} num={People.results.indexOf(item)+1}/>\r\n      ))}\r\n  </tbody>\r\n</Table>\r\n      </div>)\r\n}\r\n\r\nexport default SearchBox;","\nimport './App.css';\nimport Head from \"./components/head\"\nimport SearchBox from './components/search'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Head/>\n      <SearchBox/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}